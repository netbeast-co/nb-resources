var readline = require('readline');

var defaultSpinnerString = 0;
var defaultSpinnerDelay = 60;

var Spinner = function(textToShow){
  this.text = textToShow || '';
  this.setSpinnerString(defaultSpinnerString);
  this.setSpinnerDelay(defaultSpinnerDelay);
};

Spinner.spinners = [
  '|/-\\',
  'Раѓ-РђЊРђћРђЊ-',
  'РЌљРЌЊРЌЉРЌњ',
  'РЌ┤РЌиРЌХРЌх',
  'РЌ░РЌ│РЌ▓РЌ▒',
  'РќќРќўРќЮРќЌ',
  'РќаРќАРќфРќФ',
  'РќїРќђРќљРќё',
  'РќЅРќіРќІРќїРќЇРќјРќЈРќјРќЇРќїРќІРќіРќЅ',
  'РќЂРќЃРќёРќЁРќєРќЄРќѕРќЄРќєРќЁРќёРќЃ',
  'РєљРєќРєЉРєЌРєњРєўРєЊРєЎ',
  'РћцРћўРћ┤РћћРћюРћїРћгРћљ',
  'РЌбРЌБРЌцРЌЦ',
  '.oO┬░Oo.',
  '.oO@*',
  '­ЪїЇ­Ъїј­ЪїЈ',
  'РЌАРЌА РіЎРіЎ РЌаРЌа',
  'Рў▒Рў▓Рў┤',
  'РаІРаЎРа╣РаИРа╝Ра┤РадРаДРаЄРаЈ',
  'РаІРаЎРаџРаъРаќРадРа┤Ра▓Ра│РаЊ',
  'РаёРаєРаЄРаІРаЎРаИРа░РааРа░РаИРаЎРаІРаЄРає',
  'РаІРаЎРаџРањРаѓРаѓРањРа▓Ра┤РадРаќРањРаљРаљРањРаЊРаІ',
  'РаЂРаЅРаЎРаџРањРаѓРаѓРањРа▓Ра┤РацРаёРаёРацРа┤Ра▓РањРаѓРаѓРањРаџРаЎРаЅРаЂ',
  'РаѕРаЅРаІРаЊРањРаљРаљРањРаќРадРацРааРааРацРадРаќРањРаљРаљРањРаЊРаІРаЅРаѕ',
  'РаЂРаЂРаЅРаЎРаџРањРаѓРаѓРањРа▓Ра┤РацРаёРаёРацРааРааРацРадРаќРањРаљРаљРањРаЊРаІРаЅРаѕРаѕ',
  'РбёРбѓРбЂРАЂРАѕРАљРАа',
  'Рб╣Рб║Рб╝РБИРБЄРАДРАЌРАЈ',
  'РБЙРБйРБ╗Рб┐РА┐РБЪРБ»РБи',
  'РаЂРаѓРаёРАђРбђРааРаљРаѕ'
];

Spinner.setDefaultSpinnerString = function(value) {
  defaultSpinnerString = value;
};

Spinner.setDefaultSpinnerDelay = function(value) {
  defaultSpinnerDelay = value;
};

Spinner.prototype.start = function() {
  var current = 0;
  var self = this;
<<<<<<< HEAD
  this.id = setInterval(function() {
    var msg = self.text.indexOf('%s') > -1 ? self.text.replace('%s', self.chars[current]) : self.chars[current] + ' ' + self.text;
=======
  var hasPos = self.text.indexOf('%s') > -1;
  this.id = setInterval(function() {
    var msg = hasPos ? self.text.replace('%s', self.chars[current]) : self.chars[current] + ' ' + self.text;
>>>>>>> 092300240bcde52cbdb2b540245e2273a466b3c6
    clearLine();
    process.stdout.write(msg);
    current = ++current % self.chars.length;
  }, this.delay);
};

<<<<<<< HEAD
Spinner.prototype.isSpinning = function() {
  return this.id !== undefined;
}

=======
>>>>>>> 092300240bcde52cbdb2b540245e2273a466b3c6
Spinner.prototype.setSpinnerDelay = function(n) {
  this.delay = n;
};

Spinner.prototype.setSpinnerString = function(str) {
  this.chars = mapToSpinner(str, this.spinners).split('');
};

<<<<<<< HEAD
Spinner.prototype.setSpinnerTitle = function(str) {
  this.text = str;
}

Spinner.prototype.stop = function(clear) {
  clearInterval(this.id);
  this.id = undefined;
=======
Spinner.prototype.stop = function(clear) {
  clearInterval(this.id);
>>>>>>> 092300240bcde52cbdb2b540245e2273a466b3c6
  if (clear) {
    clearLine();
  }
};

// Helpers

function isInt(value) {
  return (typeof value==='number' && (value%1)===0);
}

function mapToSpinner(value, spinners) {
  // Not an integer, return as strng
  if (!isInt(value)) {
    return value + '';
  }

  // Check if index is within bounds
  value = (value >= Spinner.spinners.length) ? 0 : value;
  // If negative, count from the end
  value = (value < 0) ? Spinner.spinners.length + value : value;

  return Spinner.spinners[value];
}

function clearLine() {
<<<<<<< HEAD
  readline.clearLine(process.stdout, 0);
  readline.cursorTo(process.stdout, 0);
=======
    readline.clearLine(process.stdout, 0);
    readline.cursorTo(process.stdout, 0);
>>>>>>> 092300240bcde52cbdb2b540245e2273a466b3c6
}

exports.Spinner = Spinner;
